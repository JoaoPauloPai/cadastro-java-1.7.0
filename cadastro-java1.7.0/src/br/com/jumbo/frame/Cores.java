/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.com.jumbo.frame;

import br.com.adilson.util.Extenso;
import br.com.adilson.util.PrinterMatrix;
import br.com.jumbo.controller.CoresControler;
import br.com.jumbo.controller.TesteDetalheController;
import impressao.ImpressaoView;

import java.awt.Dimension;
import java.util.*;

import java.sql.Connection;
//import static java.util.Collections.list;
import javax.swing.ListSelectionModel;
import javax.swing.SwingConstants;
import org.openswing.swing.client.GridControl;
import org.openswing.swing.mdi.client.InternalFrame;
import org.openswing.swing.table.client.GridController;

/**
 *
 * @author Joao
 */
public class Cores extends InternalFrame {

    /**
     * Creates new form Carros
     */
    private Connection conn = null;
    private List list = null;
    private Date data = new Date();

    //  private br.com.jumbo.frame.Cores c = null;
    public Cores(Connection conn, CoresControler controller) {
        this.conn = conn;

        try {

            initComponents();
            setSize(500, 200);
            gridControl1.setController(controller);
            gridControl1.setGridDataLocator(controller);

        } catch (Exception e) {
            e.printStackTrace();
        }

    }

    public Cores(Connection conn, GridController dataController) {
        try {
            this.conn = conn;
            initComponents();

            btImprimir.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/impressora.png")));
            btImprimir.setPreferredSize(new Dimension(65, 41));
            btImprimir.setToolTipText("Clique para visulizar a impressão");

            desabilita();

            gridControl1.setBottomGridController(dataController);

            br.com.jumbo.frame.Cores c = new br.com.jumbo.frame.Cores(conn, null);

            setSize(590, 440);

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public GridControl getGridControl1() {
        return gridControl1;
    }

    public void reloadData() {

        gridControl1.reloadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        gridControl1 = new org.openswing.swing.client.GridControl();
        textColumn1 = new org.openswing.swing.table.columns.client.TextColumn();
        textColumn2 = new org.openswing.swing.table.columns.client.TextColumn();
        jPanel1 = new javax.swing.JPanel();
        insertButton1 = new org.openswing.swing.client.InsertButton();
        reloadButton1 = new org.openswing.swing.client.ReloadButton();
        deleteButton1 = new org.openswing.swing.client.DeleteButton();
        editButton1 = new org.openswing.swing.client.EditButton();
        saveButton1 = new org.openswing.swing.client.SaveButton();
        btImprimir = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        labelControl2 = new org.openswing.swing.client.LabelControl();

        getContentPane().setLayout(new java.awt.GridBagLayout());

        gridControl1.setDeleteButton(deleteButton1);
        gridControl1.setEditButton(editButton1);
        gridControl1.setFunctionId("veiculo");
        gridControl1.setInsertButton(insertButton1);
        gridControl1.setReloadButton(reloadButton1);
        gridControl1.setSaveButton(saveButton1);
        gridControl1.setSelectionMode(ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        gridControl1.setValueObjectClassName("br.com.jumbo.vo.CoresVO");

        textColumn1.setColumnFilterable(true);
        textColumn1.setColumnName("cor");
        textColumn1.setColumnSortable(true);
        textColumn1.setEditableOnEdit(true);
        textColumn1.setEditableOnInsert(true);
        textColumn1.setHeaderColumnName("Nome da Cor");
        textColumn1.setMaxCharacters(20);
        textColumn1.setUpperCase(true);
        gridControl1.getColumnContainer().add(textColumn1);

        textColumn2.setColumnFilterable(true);
        textColumn2.setColumnName("abrevCor");
        textColumn2.setColumnSortable(true);
        textColumn2.setEditableOnEdit(true);
        textColumn2.setEditableOnInsert(true);
        textColumn2.setHeaderColumnName("Abrev Cor");
        textColumn2.setMaxCharacters(2);
        textColumn2.setTextAlignment(SwingConstants.CENTER);
        textColumn2.setUpperCase(true);
        gridControl1.getColumnContainer().add(textColumn2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.weighty = 1.0;
        getContentPane().add(gridControl1, gridBagConstraints);

        jPanel1.setLayout(new java.awt.FlowLayout(java.awt.FlowLayout.LEADING));

        insertButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                insertButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(insertButton1);
        jPanel1.add(reloadButton1);

        deleteButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(deleteButton1);
        jPanel1.add(editButton1);

        saveButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(saveButton1);

        btImprimir.setText("Imprimir");
        btImprimir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btImprimirActionPerformed(evt);
            }
        });
        jPanel1.add(btImprimir);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jPanel1, gridBagConstraints);

        labelControl2.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        labelControl2.setText("Cadastro de Cores");
        jPanel2.add(labelControl2);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.weightx = 1.0;
        getContentPane().add(jPanel2, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void insertButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_insertButton1ActionPerformed
//        new TesteDetalheController(this, null, conn);
    }//GEN-LAST:event_insertButton1ActionPerformed

    private void deleteButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteButton1ActionPerformed

    private void btImprimirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btImprimirActionPerformed

        ///String cor = String.valueOf(textColumn1.getInsets(cor));

        PrinterMatrix printer = new PrinterMatrix();
        Extenso e = new Extenso();
        e.setNumber(101.85);

        //Define o tamanho do papel/tela para impressão, aqui 25 linhas e 80 colunas
        printer.setOutSize(25, 80);

        //Imprime * da 2ª linha a 25 na culuna 1
        printer.printCharAtLin(2, 25, 1, "*");

        //Imprime * da 1ª linha a 80
        printer.printCharAtCol(1, 1, 80, "*");
        printer.printCharAtCol(4, 2, 80, "=");
        printer.printCharAtCol(6, 2, 80, "=");
        printer.printCharAtCol(8, 2, 80, "=");

        printer.printTextLinCol(3, 20, "RELATÓRIOS DE CORES");

        printer.printTextLinCol(5, 20, "JUMBO SISTEMA JAVA");

        printer.printTextLinCol(7, 10, "Código");
        printer.printTextLinCol(7, 20, "Cor");
        printer.printTextLinCol(7, 30, "Abrv Cor");
        printer.printTextLinCol(7, 40, "Nome");
        // printer.printTextLinCol(6, 10, "Código");

        //Imprime * da 2ª linha a 25 na coluna 80
        // printer.printCharAtLin(2, 25, 80, "*");
        //Imprime 0 na linha 4 coluna 5
        // printer.printTextLinCol(4, 5, e.toString());
        //printer.printTextLinCol(arg0, arg1, arg2);
        //Imprime Teste na linha 14 e coluna 40
        // printer.printTextLinCol(14, 40, "Teste");
        //Imprime * na linha 25 da coluna 1 a 80
        // printer.printCharAtCol(25, 1, 80, "*");
        //Imprimir imprimindo em moodo texto na linha 14 e coluna 10
        // printer.printTextLinCol(14, 10, "Imprimindo em modo de texto");
        //printer.printTextLinCol(15, 10, "Imprimindo um novo texto");
        //Imprimir - na linha 13 da 2 coluna a 79
        //  printer.printCharAtCol(13, 2, 79, "-");
        //Imprimir - na linha 15 da 2 coluna a 79
        //  printer.printCharAtCol(15, 2, 79, "-");
        //Imprimir + da linha 17 a 24 da coluna 50 a 79
        //  printer.printCharAtLinCol(17, 24, 50, 79, "+");
        // printer.setOutSize(25, 80);
        // printer.printCharAtCol(1, 1, 80, "=");
        //  printer.toImageFile(System.getProperty("user.dir")+"\\src\\impressao\\impressao.jpg");
        // printer.toFile("impressao.jpg");
        // printer.toPrinter("\\192.168.0.10");
        // printer.toImageFile("impressao.jpg");
        //  printer.mapearDocumentoImageFile(25, 80, "impressao.jpg");
        // String arg[] = {""};
        // ImpressaoView.main(arg);
        // TesteImpressao.main(arg);
     
        //Código comentado
        //  int linha = 8;

       // for (CoresVO vo : list) {
     //   printer.printTextLinCol(linha, 1, textColu;
           // printer.printTextLinCol(linha, 1, String.valueOf(textColumn1.toString()));
        //  printer.printTextLinCol(linha,1, String.valueOf(textColumn1.toString()));
       
        //Código comentado
       //linha++;

      //  }
        //  printer.toFile("impressao.jpg");
//printer.toPrinter("\\192.168.0.10\HPDESKJET2050J510series");
        String arg[] = {""};

        ImpressaoView.main(arg);
//printer.toPrinter("impressao.jpg");
//printer.toPrinter("\\192.168.0.10\HPDESKJET2050J510series");
      //  printer.mapearDocumentoImageFile(30, 80, "impressao.jpg");
      //  printer.toPrinter("impressao.jpg");


    }//GEN-LAST:event_btImprimirActionPerformed

    private void saveButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButton1ActionPerformed
        Date data = new Date();
        
          HashMap map = new HashMap();

            map.put("data", "core.data");
            data.toString();
    }//GEN-LAST:event_saveButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btImprimir;
    private org.openswing.swing.client.DeleteButton deleteButton1;
    private org.openswing.swing.client.EditButton editButton1;
    private org.openswing.swing.client.GridControl gridControl1;
    private org.openswing.swing.client.InsertButton insertButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private org.openswing.swing.client.LabelControl labelControl2;
    private org.openswing.swing.client.ReloadButton reloadButton1;
    private org.openswing.swing.client.SaveButton saveButton1;
    private org.openswing.swing.table.columns.client.TextColumn textColumn1;
    private org.openswing.swing.table.columns.client.TextColumn textColumn2;
    // End of variables declaration//GEN-END:variables

    private void desabilita() {
        btImprimir.setEnabled(true);
    }
}
